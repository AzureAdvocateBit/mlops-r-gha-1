# This is a basic workflow to help you get started with Actions

name: Train and Deploy Model

# Runs on any push, except mods to the Shiny app code
on:
  push:
    branches: [ main ]
    paths-ignore: 
    - 'accident-app/**'
  pull_request:
    branches: [ main ]
    paths-ignore: 
    - 'accident-app/**'
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Train model in Azure ML
  train:
    runs-on: ubuntu-latest
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2
        
    # Connect or Create the Azure Machine Learning Workspace
    - name: Connect/Create Azure Machine Learning Workspace
      id: aml_workspace
      uses: Azure/aml-workspace@v1
      with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Connect or Create a Compute Target in Azure Machine Learning
    - name: Connect/Create Azure Machine Learning Compute Target
      id: aml_compute_training
      uses: Azure/aml-compute@v1
      with:
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

    # Connect to the Shiny VM to train the model
    - name: Train model
      uses: JimCronqvist/action-ssh@master
      env:
        AZURE_CREDENTIALS: '${{ secrets.AZURE_CREDENTIALS}}'
      with:
        hosts: ${{ secrets.SHINYUSERNAME }}@${{ secrets.SHINYHOST }}
        privateKey: ${{ secrets.SHINYKEY }}
        command: |
          cd mlops-r-gha
          export AZURE_CREDENTIALS
          Rscript train-model.R

    ## TODO: Add data to datastore

    # Connect to the Shiny VM to register and deploy the model
    - name: Deploy model
      uses: JimCronqvist/action-ssh@master
      env:
        AZURE_CREDENTIALS: '${{ secrets.AZURE_CREDENTIALS}}'
      with:
        hosts: ${{ secrets.SHINYUSERNAME }}@${{ secrets.SHINYHOST }}
        privateKey: ${{ secrets.SHINYKEY }}
        command: |
          cd mlops-r-gha
          export AZURE_CREDENTIALS
          Rscript deploy-model.R

  deploy:
    name: Deploy to Shiny Server
    runs-on: ubuntu-latest
    needs: train

    steps:

    ###  If you need to open the SSH port temporarily on the Shiny Server, uncomment this section

    #   - name: dig +short myip.opendns.com @resolver1.opendns.com
    #     run: dig +short myip.opendns.com @resolver1.opendns.com

    #   - name: Add NSG Rule
    #     uses: venura9/manage-nsg@master
    #     id: rule
    #     with:
    #       azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
    #       rule-nsg-resource-group-name: ${{ secrets.SHINY_RG }}
    #       rule-nsg-name: ${{ secrets.SHINY_NSG }}
    #       rule-inbound-port: 22

    #   - name: Print Created NSG Rule Name
    #     run: echo "Rule Name ${{ steps.rule.outputs.rule_name }}"

      - uses: actions/checkout@master

      - name: copy files via ssh key
        uses: appleboy/scp-action@master
        with: 
          host: ${{ secrets.SHINYHOST }}
          username: ${{ secrets.SHINYUSERNAME }}
          key: ${{ secrets.SHINYKEY }}
          source: "accident-app/app.R"
          target: "~"

    #  Re-close temporarily opened SSH port 
    #   - name: Remove NSG Rule
    #     uses: venura9/manage-nsg@master
    #     with: 
    #       azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}
    #       rule-id-for-removal: ${{ steps.rule.outputs.rule_name }}
    #       rule-nsg-resource-group-name: ${{ secrets.SHINY_RG }}
    #       rule-nsg-name: ${{ secrets.SHINY_NSG }}
    